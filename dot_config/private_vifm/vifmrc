" This is the actual command used to start vi.  The default is vim.
" If you would like to use emacs or emacsclient, you can use them.
" Since emacs is a GUI app and not a terminal app like vim, append the command
" with an ampersand (&).

set vicmd=nvim

" This makes vifm perform file operations on its own instead of relying on
" standard jes like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.

set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash
command! trashList :lstrash "list items in trash directory

" This is how many directories to store in the directory history.

set history=100

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set novimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Selected color scheme
" The following line will cause issues if using vifm.vim with regular vim.
" Either use neovim or comment out the following line.
colorscheme palenight

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt='%d %b %Y'

" Show list of matches on tab completion in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Controls how size of directories is displayed in file views.
set dirsize=size

" highlight search results automatically
set hlsearch

" Use KiB, MiB, ... suffixes instead of K, M, ... when printing size  in  human-friendly format
 set iec

" Configures the way size is formatted in human-friendly way.
set sizefmt=units:iec,precision:0,nospace

" perform fast file cloning (copy-on-write), when available
set iooptions=fastfilecloning

set tuioptions=psu

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Set custom status line look

set statusline="  Hint: %z%= %A %10u:%-7g %15E %20d  "

" Set line numbers to show

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark h ~/

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

"mount android devices
command! mountMtp !aft-mtp-mount ~/mnt ; cd ~/mnt
command! unmountMtp !fusermount -uz ~/mnt

"send file using kdeconnect
command! sendFile :!fileLocation=$(echo "%d/%c" | tr -d "\\");qdbus org.kde.kdeconnect /modules/kdeconnect/devices/99c2205bc9b97222/share org.kde.kdeconnect.device.share.shareUrl "file://$fileLocation"

" zoxide, faster way to navigate
" Use term() instead system() which makes sure
" external interactive applications won't
" affect the way terminal is used by vifm
" This fix weird characters at the beginning of the path
command! zoxide :execute 'cd "'.term('zoxide query %a').'"'

" rsync command specially useful for partial copies
command! rsync rsync --archive --compress --info=progress2 --human-readable --update --delete %f %D %s

" cp command always recursive, preserving all attributes and only updating old files
command! cp cp -avu %f %D %s

" Show report file system disk space usage
command! df df -h %m 2> /dev/null

" Show the size of the selected element
command! du du -sh %f %m

" diff with vim
command! diff nvim -d %f %F

" Get Dropbox urls in the clipboard
command! dropboxUrls dropbox-urls-extractor.sh %f

" Create symbolic link
command! link ln -s %f:p %D

" zip selected files/folders
command! zip zip -r %f.zip %f

" unzip selected zipped files
command! unzip unzip %c -d $(echo "%c" | tr -d ".zip") &

" untar selected archived files
command! untar tar xf %f %s

" tar selected files
command! tar tar cvaf %a %f %s

" use e() zsh function for extracting any compressed file or folder
command! extract :!e %f %s

" use c() zsh function for compressing any file or folder
command! compress :!c %a %s

" Repeat last command to the selected files/folders
command! run !! ./%f

" Run make command
command! make !!make %a

" Reload vifmrc  file
command! reload :write | restart

" Find with fd
command! fd fd --exclude node_modules %a %M

" Find files with FZF and fd
command! fzffile :set noquickview | :execute 'goto "'.term('fd --hidden --follow --color=always --type f . $HOME | fzf --bind "?:toggle-preview" --ansi --preview-window right:wrap:hidden --preview "bat --style=numbers --color=always --line-range :500 {}" --preview-window wrap 2>/dev/tty ').'"%IU' | redraw

" Find folders with FZF and fd
command! fzffolder :set noquickview | :execute 'goto "'.term('fd --hidden --follow --color=always --type d . $HOME | fzf --bind "?:toggle-preview" --ansi --preview-window right:wrap:hidden --preview "exa --all --sort name --tree --level 1 --classify --git --long --color=always --no-user --no-permissions {}" --preview-window wrap 2>/dev/tty ').'"%IU' | redraw

" Create and change to the folder
command! mc :mkdir! '%a' | cd '%a'
" Create directory
command! md :mkdir! '%a'
"command! mdm :mkdir! %a
command! sudo :!sudo vifm %d %D
command! vgrep nvim "+grep %a"
" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf
filextype *.pdf zathura %c %i &, apvlv %c, xpdf %c
fileviewer *.pdf
        \ vifmimg pdf %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

" PostScript
filextype *.ps,*.eps,*.ps.gz
        \ {View in zathura}
        \ zathura %f,
        \ {View in gv}
        \ gv %c %i &,

" Djvu
filextype *.djvu
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,

" Audio
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
        \ {View using cmus}
        \ cmus-remote -f %f,
       \ {Play using ffplay}
       \ ffplay -nodisp -autoexit %c,
       \ {Play using MPlayer}
       \ mplayer %f,
fileviewer *.mp3 mediainfo
fileviewer *.flac soxi

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx]
        \ {Play using mpv}
        \ nohup mpv %f & ; disown,
        \ {Play using vlc}
        \ vlc %f,
        \ {View using ffplay}
        \ ffplay -fs -autoexit %f,
        \ {View using Dragon}
        \ dragon %f:p,
        \ {View using mplayer}
        \ mplayer %f,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]
          \ mediainfo
          "\ vifmimg video %px %py %pw %ph %c
          "\ %pc
          "\ vifmimg clear

" Web
filextype *.html,*.htm
        \ {Open with emacs}
        \ emacsclient -c %c &,
        \ {Open with vim}
        \ vim %c &,
        \ {Open with dwb}
        \ dwb %f %i &,
        \ {Open with firefox}
        \ firefox %f &,
        \ {Open with uzbl}
        \ uzbl-browser %f %i &,
filetype *.html,*.htm links, lynx

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" font
fileviewer *.ttf,*.otf
        \ vifmimg font %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear


" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ {View in sxiv}
        \ sxiv -ia %f &,
        \ {View in feh}
        \ feh %d &,
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ vifmimg draw %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear
        
" OpenRaster
filextype *.ora
        \ {Edit in MyPaint}
        \ mypaint %f,

" Mindmap
filextype *.vym
        \ {Open with VYM}
        \ vym %f &,

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filetype *.torrent ktorrent %f &
fileviewer *.torrent dumptorrent -v %c

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {Extract here}
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer *.tar tar -tf %c

" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx docx2txt.pl %f -

" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

" Directories
filextype */
        \ {View in thunar}
        \ Thunar %f &,
fileviewer */
        \ tree

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
windo set viewcolumns=-{name}..,-12{size},10{mtime}

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" Sample mappings

"Open all images in current directory in sxiv thumbnail mode
nnoremap sx :!sxiv -t %d & <cr>

nnoremap mm :mountMtp | unmountMtp | mountMtp | cd ~/mnt<cr>
nnoremap mu :unmountMtp<cr>
nnoremap mg :cd ~/mnt<cr>"goto mount directory

"Open selected images in gimp
nnoremap gp :!gimp %f & <cr>

" Start shell in current directory
nnoremap sh :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :if layoutis('only') | vsplit | endif | view<cr>
vnoremap w :if layoutis('only') | vsplit | endif | view<cr>gv

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Yank current directory path into the clipboard
nnoremap yd :!echo -n %d | xclip -in -selection clipboard %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

" Yank current file path into the clipboard
nnoremap yf :!printf "%%s\n" %f:p | xclip -in -selection clipboard -rmlastnl %i<cr>:echo expand('%"f:p') "is yanked to clipboard"<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Mappings for select/unselect
nnoremap t tj
nnoremap T tk

" Mapping for visual selection of all files
nnoremap vv :%select<cr>

" Set the same directory in the other panel
nnoremap sy :sync<cr>

" Reload config
nnoremap <silent> rl :reload<cr>

" goto history
nnoremap <silent> o :history<cr>

" Open console in current directory
nnoremap ,t :!xterm &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart<cr>
" Open gvim to edit vifmrc
nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

"send file using kdeconnect
nnoremap sf :sendFile<cr>

" mkdir -p directory
nnoremap md :md<space>

" mkdir && cd to the directory
nnoremap mc :mc<space>

" Touch file
"nnoremap to :touch<space>

" Repeat name substitution
nnoremap su :su<cr>

" zoxide mapping
nnoremap <silent> <a-x> :zoxide<space>

" FZF mapping
nnoremap <silent> <a-c> :fzffolder<cr>
nnoremap <silent> <c-t> :fzffile<cr>


" Use < and > without ctrl-w prefix key in normal mode
nnoremap < <c-w><
nnoremap > <c-w>>
" ------------------------------------------------------------------------------

" Various customization examples

" Use ag (the silver searcher) instead of grep
"
" set grepprg='ag --line-numbers %i %a %s'

" Add additional place to look for executables
"
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"

source ~/.config/vifm/favicon.txt
set previewoptions+=graphicsdelay:0
